[
	{
		"building_block_id": "Ryjz4XYea5bv4fRqjxq6sRKjMyYloc7biVB3ADGdr6NYS1rdYhK9cF1NGp3mktTW8123Wh31236coZSr5x4T1ooaXA117117",
		"building_block_category_id": "R6G24kzjyfthvmoHoIE9116123rgLuOWovEmI7QP60XdxoFd9CPGEbKM116DxrEvX2SWvxHvQnffrF1pa8MaPkEe9DUA117117",
		"name": "Basic Auth",
		"about": "Using Basic Authentication for security access to API resources.",
		"category_id": "200",
		"category": "Authorization & Authentication Formats",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "9Jq9wzpVu116iX7ohkFAMJ3tVjM1US091dsrrb4C8PGZTwwRCdAPOMuHhscgU9uZ0TivqjZ8wjwvNABzIXa8kMtw117117",
		"building_block_category_id": "R6G24kzjyfthvmoHoIE9116123rgLuOWovEmI7QP60XdxoFd9CPGEbKM116DxrEvX2SWvxHvQnffrF1pa8MaPkEe9DUA117117",
		"name": "OAuth",
		"about": "Using OAuth for authorization and access management for API resources.",
		"category_id": "200",
		"category": "Authorization & Authentication Formats",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "5RnZNAfPsFwyAGez07iXc9Gb3DPGQbaa123eH1X9hbrdI4eqCB9uIlHyOzXqL123HYnJQT68Y9YCS9jECrCV116I3csA117117",
		"building_block_category_id": "R6G24kzjyfthvmoHoIE9116123rgLuOWovEmI7QP60XdxoFd9CPGEbKM116DxrEvX2SWvxHvQnffrF1pa8MaPkEe9DUA117117",
		"name": "API Keys",
		"about": "Using API keys for securing access to API resources.",
		"category_id": "200",
		"category": "Authorization & Authentication Formats",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "JA7zw5dfY012qG8sBMFAaFpFVfX2u123rO8f3E7WzMpWUZmC29UwBpXBH0vKX4b7qQNAbwqpEk9ixdfAPikGZXOw117117",
		"building_block_category_id": "R6G24kzjyfthvmoHoIE9116123rgLuOWovEmI7QP60XdxoFd9CPGEbKM116DxrEvX2SWvxHvQnffrF1pa8MaPkEe9DUA117117",
		"name": "JSON Web Token",
		"about": "Using JSON web tokens for securing access to API resources.",
		"category_id": "200",
		"category": "Authorization & Authentication Formats",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "ZyFJk6Wvs70iS5va8fAbCKHYbL1wGkw8FnvuvAahsqobDZjr9QZUVuOAULVyQYmyfKQ9XF5CX9WDcsHwElK7hw117117",
		"building_block_category_id": "a48JyvJRFtyC1R1231JnhL9P2um2PXMGz1K9kZ3LXGKfWu29vTRD1KaypAP116KML1b0NkrLYNLz3R6kujkpF8wwYQ117117",
		"name": "Session Management",
		"about": "API should pass session-based authentication, either by session token via a POST or by API key as a POST body argument or as a cookie, avoiding usernames, passwords, session tokens, and API keys in the URL",
		"category_id": "201",
		"category": "Authorization & Authentication Considerations",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "FLaASAJRo6m29ZQwQOUfdwaLAebS4eBEjxl12366vBGbOmbuQz7ErMTa6Kh9OX13lv1163kA1LLLs4nn123116bZMFDG116Q117117",
		"building_block_category_id": "a48JyvJRFtyC1R1231JnhL9P2um2PXMGz1K9kZ3LXGKfWu29vTRD1KaypAP116KML1b0NkrLYNLz3R6kujkpF8wwYQ117117",
		"name": "Session State",
		"about": "Many web services are written to be as stateless as possible, usually ending up with a state blob being sent as part of the transaction.",
		"category_id": "201",
		"category": "Authorization & Authentication Considerations",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "ZR8htN1aUU8Tq6djD1JeVpBiQD64pfrQtTJPA6MzGCcBdnhEnmtNtvTwoh8C8Nl71116RJFXif9SZo123TZ5qhHBOg117117",
		"building_block_category_id": "a48JyvJRFtyC1R1231JnhL9P2um2PXMGz1K9kZ3LXGKfWu29vTRD1KaypAP116KML1b0NkrLYNLz3R6kujkpF8wwYQ117117",
		"name": "Anti-Farming",
		"about": "APIs are regularly farmed for the data they contain, and while there's no technical method of preventing this use, having a clear business model, and API management strategy works to minimize.",
		"category_id": "201",
		"category": "Authorization & Authentication Considerations",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "XUTsTYNjkcTg8z2eZwNp9guu083gPgVFnDyXuoYP116Mmq1TRx3K02Jz2zSIgPJ8VdCQ123KjBMgoz9V4bYei116C88g117117",
		"building_block_category_id": "a48JyvJRFtyC1R1231JnhL9P2um2PXMGz1K9kZ3LXGKfWu29vTRD1KaypAP116KML1b0NkrLYNLz3R6kujkpF8wwYQ117117",
		"name": "Protect HTTP Methods",
		"about": "Making sure the incoming HTTP method is valid for the session token/API key and associated resource collection, action, and record.",
		"category_id": "201",
		"category": "Authorization & Authentication Considerations",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "gAikZRwAzsVPPKQmaTI116RdeI9IFmX7GqHdd6123e242CEJueqAHhLhteq4BCSiOHqG116PQsynkrVM1Qu1162N116nkgcA117117",
		"building_block_category_id": "a48JyvJRFtyC1R1231JnhL9P2um2PXMGz1K9kZ3LXGKfWu29vTRD1KaypAP116KML1b0NkrLYNLz3R6kujkpF8wwYQ117117",
		"name": "Methods Whitelist",
		"about": "Properly restrict the allowable verbs such that only the allowed verbs would work, while all others would return a proper response code (for example, a 403 Forbidden).",
		"category_id": "201",
		"category": "Authorization & Authentication Considerations",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "bUknxof34tbp123yTJ0b2ndT116rFDBNovssY1162cnD12vgLsBGI9s4bIoKqPNudLEKpsGhYgQq0J9Py8oTqWROXkPw117117",
		"building_block_category_id": "a48JyvJRFtyC1R1231JnhL9P2um2PXMGz1K9kZ3LXGKfWu29vTRD1KaypAP116KML1b0NkrLYNLz3R6kujkpF8wwYQ117117",
		"name": "Cross-Site Request Forgery",
		"about": "Make sure any PUT, POST, and DELETE request is protected from Cross Site Request Forgery, typically done using a token-based approach.",
		"category_id": "201",
		"category": "Authorization & Authentication Considerations",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "123Y0KFdS1164JxEDDtIAWfObozir6y8Flt0rkwdxevsCCeCFlonpMgF3HJfEZrwvfthH116wXkrLypaZ34116VqlLf0EA117117",
		"building_block_category_id": "a48JyvJRFtyC1R1231JnhL9P2um2PXMGz1K9kZ3LXGKfWu29vTRD1KaypAP116KML1b0NkrLYNLz3R6kujkpF8wwYQ117117",
		"name": "Insecure Direct Object References",
		"about": " It may seem obvious, but if you had a bank account REST web service, you'd have to make sure there is adequate checking of primary and foreign keys.",
		"category_id": "201",
		"category": "Authorization & Authentication Considerations",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "HnYrXwU78Ghg3QUXqbFXYBrJq123b7PIC55OobyEMD7iEcIzZ2pr80xcE123KJ5P8tr214Qn9k116uwpKCd1161230aOVnsA117117",
		"building_block_category_id": "nqHMMd3jtAHUEChGRzVE116WMUAKDyv0CTXWvAJWfGVlTRnjEWLKg2BOIcs6NIdlvBtvrHobalQ7q0cRiHgpng1A117117",
		"name": "Assist the User",
		"about": "Assisting in the input of high quality data into APIs, by validating what is submitted, and rejecting anything that does not pass validation.",
		"category_id": "202",
		"category": "Input Validation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "03116e4LYggkUXDVXysdYWEzSYRLvJeMMG123ezrIQNso7OLB4b7Cq906vpZ6mj7mHd123kZL1kXlyeBCq2ZhKZU9dGw117117",
		"building_block_category_id": "nqHMMd3jtAHUEChGRzVE116WMUAKDyv0CTXWvAJWfGVlTRnjEWLKg2BOIcs6NIdlvBtvrHobalQ7q0cRiHgpng1A117117",
		"name": "Secure Parsing",
		"about": "Use a secure parser for parsing the incoming messages. If you are using XML, make sure to use a parser that is not vulnerable to XXE and similar attacks.rn",
		"category_id": "202",
		"category": "Input Validation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "SezxjtRyddKUwujvnIirFUO116bsIJkgcs35tgOAaBVbMWuzZ3Mc2p8123alh4NP3R7ZG0GC22DjkNcyNGVITdQp3g117117",
		"building_block_category_id": "nqHMMd3jtAHUEChGRzVE116WMUAKDyv0CTXWvAJWfGVlTRnjEWLKg2BOIcs6NIdlvBtvrHobalQ7q0cRiHgpng1A117117",
		"name": "Strong Typing",
		"about": "It's difficult to perform most attacks if the only allowed values are true or false, or a number, or one of a small number of acceptable values. Strongly type incoming data as quickly as possible.rn",
		"category_id": "202",
		"category": "Input Validation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "COnVQRvDIYImPG1163C2KwRdODJXTBGTrIdmsjzf544EYZTHrpZtVi1167TiwW116h2R123PBlkorU116OyJ98YMekRGEASw117117",
		"building_block_category_id": "nqHMMd3jtAHUEChGRzVE116WMUAKDyv0CTXWvAJWfGVlTRnjEWLKg2BOIcs6NIdlvBtvrHobalQ7q0cRiHgpng1A117117",
		"name": "Validate Content-Types",
		"about": "The server should never assume the Content-Type; it should always check that the Content-Type header and the content are the same type.n",
		"category_id": "202",
		"category": "Input Validation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "6116tDI673x1234wMw1T0VkTETeOkXgDxTHmGpe4MuYJLL3qlCfJopmrkOdJy123nKMqkCBTiMrOdzGNjjUoLXzRgt9w117117",
		"building_block_category_id": "nqHMMd3jtAHUEChGRzVE116WMUAKDyv0CTXWvAJWfGVlTRnjEWLKg2BOIcs6NIdlvBtvrHobalQ7q0cRiHgpng1A117117",
		"name": "Validate Response Types",
		"about": "Do NOT simply copy the Accept header to the Content-type header of the response, and reject the request if the Accept header does not specifically contain one of the allowable types.n",
		"category_id": "202",
		"category": "Input Validation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "eYCoR6zRSKyMvqqdXpQYTJI197eZIKT71n1xsumFjtMUvD61165QFwgijXGEilbR063RJGo0q4s1IDTn123GiIubog117117",
		"building_block_category_id": "nqHMMd3jtAHUEChGRzVE116WMUAKDyv0CTXWvAJWfGVlTRnjEWLKg2BOIcs6NIdlvBtvrHobalQ7q0cRiHgpng1A117117",
		"name": "JSON Validation",
		"about": "Making sure all JSON is valid helps make sure that APIs are operating as expectation and making sure vulnerabilities are not being passed in with API requests and responses. ",
		"category_id": "202",
		"category": "Input Validation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "RIU4EG0Xx6tV116dIlmvOovisr3AYJKz6WAYlt8NJm1238n4LzV21238YKQeGjHrMFUeTX1235VpOAKGVmaqjjPbHu8Vww117117",
		"building_block_category_id": "nqHMMd3jtAHUEChGRzVE116WMUAKDyv0CTXWvAJWfGVlTRnjEWLKg2BOIcs6NIdlvBtvrHobalQ7q0cRiHgpng1A117117",
		"name": "XML Validation",
		"about": "XML-based services must ensure that they are protected against common XML based attacks by using secure XML-parsing.n",
		"category_id": "202",
		"category": "Input Validation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "U4orBzIclTq4116q37D5SZonrWce4CfGIdc116lo7ZXzl83O42nJApoMKhaIi3lXLYO123uWmZkEbNp4bG1vzvaRcU7Q117117",
		"building_block_category_id": "nqHMMd3jtAHUEChGRzVE116WMUAKDyv0CTXWvAJWfGVlTRnjEWLKg2BOIcs6NIdlvBtvrHobalQ7q0cRiHgpng1A117117",
		"name": "Framework-Provided Validation",
		"about": "Many frameworks allow for validation constraints to be enforced automatically by the framework at request or response time, providing automatic validation before the data is delivered to the application.n",
		"category_id": "202",
		"category": "Input Validation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "mFqKmBQ123ypZLKoPCwV6o6123WbAIoA7YB2QltZ2h55v4rkHYZRsBwcTUK116UFor3N7DLpRpJZMGEzZhoGDHEzEoGQ117117",
		"building_block_category_id": "w7Q810HvxrF11vDiK3PzhKUaIMBv3aaWUecPs72BlUfhZx21123qwFu3frh0lKqTLHAlRYa123tkEoMp9FRb6fDdaw117117",
		"name": "Send Security Headers",
		"about": "The server should always send the Content-Type header with the correct Content-Type, and preferably the Content-Type header should include a charset.n",
		"category_id": "203",
		"category": "Output Validation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "ylZJ3sxPvOshw6lFbh5zvYqGncOR2Q7q5g123vmoTKKBO63RvZMV3J116123ecCzTe1N123vUbM116vtAIrXD4c123j6Qc116E1w117117",
		"building_block_category_id": "w7Q810HvxrF11vDiK3PzhKUaIMBv3aaWUecPs72BlUfhZx21123qwFu3frh0lKqTLHAlRYa123tkEoMp9FRb6fDdaw117117",
		"name": "JSON Encoding",
		"about": "Use a proper JSON serializer to encode user-supplied data properly to prevent the execution of user-supplied input on the browser.n",
		"category_id": "203",
		"category": "Output Validation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "tQxJxFZSsio116d123l123iGJ116b1FL83MMas91VR1Aihh77TJ6o4icHrgmaLb96XGaLf4exdF5Mj3m7jr5116bIovM2rPg117117",
		"building_block_category_id": "w7Q810HvxrF11vDiK3PzhKUaIMBv3aaWUecPs72BlUfhZx21123qwFu3frh0lKqTLHAlRYa123tkEoMp9FRb6fDdaw117117",
		"name": "XML Encoding",
		"about": "Do not assemble XML string concatenation, rather us a XML serializer, ensure that the XML content sent to the browser is parseable and does not contain XML injection.n",
		"category_id": "203",
		"category": "Output Validation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "7N12Qi2hur9xrwpsBSitw3ayZy5D0lalwQVo6Xc81166P1239iZ116So1b8m1bNMm123JcTuu5KSaTGnpsBTys123obsGrlQ117117",
		"building_block_category_id": "w7Q810HvxrF11vDiK3PzhKUaIMBv3aaWUecPs72BlUfhZx21123qwFu3frh0lKqTLHAlRYa123tkEoMp9FRb6fDdaw117117",
		"name": "Link Integrity",
		"about": "Checks the reputation of web links in real time, providing an invisibly secure experience by blocking malicious and unwanted links from being present or loading in content.n",
		"category_id": "203",
		"category": "Output Validation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "b4FIK4i51vlcaL7xsWgoThiG7oAfPjKx123hV6ki2lmFuxNGma7wgUuz123mbHV0tmUdEfG4pbuAxWeL1239onyEmuVQ117117",
		"building_block_category_id": "123PEjeTUmEWyeOzYMtzFRYQYnZmHkun12323Diqy2xuqih5dyQhmo72rrOf8B8J5ibmxvdN64Nnme3wr5noAminYw117117",
		"name": "Data in Transit",
		"about": "Unless the public information is completely read-only, the use of TLS should be mandated, particularly where credentials, updates, deletions, and any value transactions are performed.n",
		"category_id": "204",
		"category": "Cryptography",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "7yRNN123MpjbHzrH0KYaQOaHiOZdFRawQqvztNMKAxDqOCDd0gpSuWv3nBKtABFpn5AGwEnjtxoi9sQhG6hG123Zcw117117",
		"building_block_category_id": "qnoFOMaxzT116HQoknicwvpnUZayTxbiHVqpBps9de6gJaapAEG5yhtSCaUdhgyiRVSja116J5qycHyftCLDpwmIyg117117",
		"name": "Buffer Overflow Attack",
		"about": "Avoid overwriting of memory fragments of the process, values of the IP (Instruction Pointer), BP (Base Pointer) and other registers which can cause exceptions, segmentation faults, and other errors to occur.n",
		"category_id": "205",
		"category": "Abuse of Functionality",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "2mYjGpSckvzPLOc5kLT8QFFQVilwtXxvnKxn6UxQo7D028ahkWL8lNGXoUjm4ifZiljtFGO5902Yt8Y3gv4MNA117117",
		"building_block_category_id": "qnoFOMaxzT116HQoknicwvpnUZayTxbiHVqpBps9de6gJaapAEG5yhtSCaUdhgyiRVSja116J5qycHyftCLDpwmIyg117117",
		"name": "Buffer Overflow via Environment Variables",
		"about": "Avoid this pattern that involves causes a buffer overflow through manipulation of environment variables, which once the attacker finds that they can modify an environment variable, they may try to overflow associated buffers.n",
		"category_id": "205",
		"category": "Abuse of Functionality",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "123wRIjWfToN9XZ6K6BdVKUqM123DO8bFaAhzgorENhfUd1ITYr0gRbttKz8123KuxyoHvStP7xE2123qOkfPrOS9rbBXQ117117",
		"building_block_category_id": "qnoFOMaxzT116HQoknicwvpnUZayTxbiHVqpBps9de6gJaapAEG5yhtSCaUdhgyiRVSja116J5qycHyftCLDpwmIyg117117",
		"name": "Overflow Binary Resource File",
		"about": "Coming from input data, and an Overflow Binary Resource File, where attacker modifies/prepares the binary file in such a way that the application, after reading this file, becomes prone to a classic Buffer overflow attack. n",
		"category_id": "205",
		"category": "Abuse of Functionality",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "tefYoOSX0qAHcJGDXw99rwH0Np99txN5VRT654nxTAuZB4i6Pw8e116sspBiRN8irRG9123flgKEeZAUWsDyM8xTjQ117117",
		"building_block_category_id": "37IYQy8nmKphS123EXKdFZGk6Jn5SovdhVcMqFNwEJIiEETsMe2j116lw2j4jT5bN123YJyDfehLlM1233NAAh75VSrGGQ117117",
		"name": "Cross-Site Request Forgery (CSRF)",
		"about": "An attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated, targeting state-changing requests, not theft of data, since the attacker has no way to see the response to the forged request. n",
		"category_id": "206",
		"category": "Data Structure Attacks",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "pvE116ZhM391162HqVf123T123116EIFfsmuS116eIMZasf66S0gP9fqqRiN116ZBkLcjJ5H3OFeG3Ucrzc4tgGSQkB47eCgMpbg117117",
		"building_block_category_id": "37IYQy8nmKphS123EXKdFZGk6Jn5SovdhVcMqFNwEJIiEETsMe2j116lw2j4jT5bN123YJyDfehLlM1233NAAh75VSrGGQ117117",
		"name": "Logic/time Bomb",
		"about": "A logic bomb is a piece of malicious code that executes when specific trigger conditions are met, such as a date or time, or possible a specific database event.n",
		"category_id": "206",
		"category": "Data Structure Attacks",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "123FFUo4tMZqyHc2XrNmEeSwQOk7mp5R1S116z116z6viYO2QQDVir0uEdnBVZ0CpnMbwvs0Wz1g4tHcikRfSQZWBu2w117117",
		"building_block_category_id": "37IYQy8nmKphS123EXKdFZGk6Jn5SovdhVcMqFNwEJIiEETsMe2j116lw2j4jT5bN123YJyDfehLlM1233NAAh75VSrGGQ117117",
		"name": "Trojan Horse",
		"about": "A Trojan Horse is a program that uses malicious code masqueraded as a trusted application, which is vehicle in which malicious code can be injected on benign applications, masqueraded in e-mail links, or JavaScript.",
		"category_id": "206",
		"category": "Data Structure Attacks",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "WyAOZpOh7r116k9fD4VaMroays6yeXW116DXT33TmLpVjm4DVBD69VO12iEY123syn7IWsQo3oi4QDsV92Ad5p9h0QIg117117",
		"building_block_category_id": "37IYQy8nmKphS123EXKdFZGk6Jn5SovdhVcMqFNwEJIiEETsMe2j116lw2j4jT5bN123YJyDfehLlM1233NAAh75VSrGGQ117117",
		"name": "Account Lockout Attack",
		"about": "Where attackers attempts to lock out user accounts by purposely failing the authentication process as many times as needed to trigger the native account lockout functionality.",
		"category_id": "206",
		"category": "Data Structure Attacks",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "pQ9QHIB5PDA116q1sd395aTeRVwXN1slABH116BcDCpknQ7bTbcAl19vO123edIEqDd7qs9oMgIbOcyD81Rj1ru116AuZQ117117",
		"building_block_category_id": "37IYQy8nmKphS123EXKdFZGk6Jn5SovdhVcMqFNwEJIiEETsMe2j116lw2j4jT5bN123YJyDfehLlM1233NAAh75VSrGGQ117117",
		"name": "Cross-Site Request Forgery (CSRF)",
		"about": "An attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated, targeting state-changing requests, not theft of data, since the attacker has no way to see the response to the forged request. n",
		"category_id": "206",
		"category": "Data Structure Attacks",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "dGsmrvPVBNeltU0ITzVWI8TWCLl9NynhNm116cOhz116sYnQdLf0RKFl0FIAVpJGM2HxpP1qAV9fQc9Xb5116EFTQMvg117117",
		"building_block_category_id": "37IYQy8nmKphS123EXKdFZGk6Jn5SovdhVcMqFNwEJIiEETsMe2j116lw2j4jT5bN123YJyDfehLlM1233NAAh75VSrGGQ117117",
		"name": "Execution After Redirect (EAR)",
		"about": "Execution After Redirect (EAR) is an attack where an attacker ignores redirects and retrieves sensitive content intended for authenticated users. A successful EAR exploit can lead to complete compromise of the application. - https://www.owasp.org/index.php/Execution_After_Redirect_(EAR)rn",
		"category_id": "206",
		"category": "Data Structure Attacks",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "kXNBhDIjEPFe116s3Y4HdWKFwKL34u5e2GUQamIpRZx9Kyk123116WdYZK123cYGK779oIhAG7zGs9cGJJ9y116DJ9O7VcqQ117117",
		"building_block_category_id": "37IYQy8nmKphS123EXKdFZGk6Jn5SovdhVcMqFNwEJIiEETsMe2j116lw2j4jT5bN123YJyDfehLlM1233NAAh75VSrGGQ117117",
		"name": "Session Fixation",
		"about": "An attack that permits an attacker to hijack a valid user session, and explore a limitation in the way the web application manages the session ID, more specifically the vulnerable web application. n",
		"category_id": "206",
		"category": "Data Structure Attacks",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "XUM8DbusZYB5VbVDuOGp63ghNtou7EMmNLZTJmDsKkAQCIpdyvF4GEOlqS5qi7kYlIuRLJ36RrM1KFDZiUHMqg117117",
		"building_block_category_id": "37IYQy8nmKphS123EXKdFZGk6Jn5SovdhVcMqFNwEJIiEETsMe2j116lw2j4jT5bN123YJyDfehLlM1233NAAh75VSrGGQ117117",
		"name": "Session Hijacking Attack",
		"about": "An attack that consists of the exploitation of the web session control mechanism, which is normally managed for a session token, exploiting http communication which uses many different TCP connections.n",
		"category_id": "206",
		"category": "Data Structure Attacks",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "A5mv116qhbEGGrpWY7urLGgRaJVnTUwlrAcHpjB123zpx8YMbgx1116iwkCbkZz116116nKPIoy8EZR123eeCkZlbLzUUtaxEg117117",
		"building_block_category_id": "37IYQy8nmKphS123EXKdFZGk6Jn5SovdhVcMqFNwEJIiEETsMe2j116lw2j4jT5bN123YJyDfehLlM1233NAAh75VSrGGQ117117",
		"name": "Session Prediction",
		"about": "An attack that focuses on predicting session ID values that permit an attacker to bypass the authentication schema of an application, by analyzing and understanding the session ID generation process, an attacker can predict a valid session ID value and get access to the application.",
		"category_id": "206",
		"category": "Data Structure Attacks",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "RudazNvMri0116xu0ErSbM3mrP8yl89116lFEEL116jAOX7vICDXzcgx582n123Kz0rPS123i1LYphGHyxdYCGAlAp1U2C6A117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Blind SQL Injection",
		"about": "Type of SQL Injection attack that asks the database true or false questions and determines the answer based on the applications response, exploiting generic error messages.",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "7fh07etankqce1IAbgxfn771N65eZWYVLhDdtHZ123f123MSxVSi1163mEglB7pzs5116R2123UcVwLFiFXu123jxxRn123eRXdQ117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Blind XPath Injection",
		"about": "An attack that may be restricted to certain databases, tables, columns, or queries, but allows attacker to modify the XPATH query to perform an action of his choosing.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "SBC8MhYEJowm8ZzqliNqXnnQ116gLa9jyfUgzbbBuDIY123EIB1E3VMqgB7NZY3C5xJZ7a116y3Va116Rzg6Q3xuWswn4A117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Code Injection",
		"about": "Attack types which consist of injecting code that is then interpreted/executed by the application, exploiting poor handling of untrusted data, and usually made possible due to a lack of proper input/output data validation.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "xQLzeS4r116vDqK6XuMC123PjLJ4Er9RKFEiJEoVQ2RZ2kBiPPiEfNAX886gn44rD9QEUpvYEQCh88OcaTbudkjLfw117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Command Injection",
		"about": "An attack in which executes arbitrary commands to the host operating system via a vulnerable application, made possible when an application passes unsafe user supplied data (forms, cookies, HTTP headers etc.).n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "4RO9id6K5V123Di7lmzWfswTmiZPf04ZjemWsML3dNeNvQGNZFsXgHpMwwhwxes7uuRIUCa04Hfrg123cqe66mF5hg117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Comment Injection Attack",
		"about": "Comments injected into an application through input can be used to compromise a system. As data is parsed, an injected/malformed comment may cause the process to take unexpected actions that result in an attack.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "pZPQsIrNhfldShJoDjkDx6BfJdAhqt1i116g123UKvheAlMZOtFC6V6WRr6kkk3IFsWsRNaNOz6ETPyp1QMSif4ZQQ117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Content Security Policy",
		"about": "Open up the possibility to instruct the client browser from which location and/or which type of resources are allowed to be loaded, providing a "directive" that loads a behavior for a target resource type.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "F4ebRRAsabXQplG4NRktJVPvZsS9c116OCGBzyuWeJqQGndHdxZCWPQB1Cd6FMVizLBhqCW4XX6hoz1iLZpeLr1g117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Content Spoofing",
		"about": "An attack made possible by an injection vulnerability, where an API does not properly handle user supplied data, and an attacker can supply content, typically via a parameter value, that is reflected back to the user.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "IPnE9EqLA123ELyv116voiN5CmwG6nUcpo76QbV6q1RvXbjKiUCJwHrLQUmCRBix3yzxUmTdPii0DrhU0C9wTAqYjg117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "CORS RequestPreflighScrutiny",
		"about": "Opening up the possibility to expose resources to all or restricted domain, made by AJAX request for resource on other domain than is source domain.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "neoa116u24hYagfeEjz3Dco123P123owfTqxrImQXyXjB3TpGetc572uZ8rCw1PvtggoVZ123ckYxcBea116hHYNvc625Afg117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Cross-site Scripting (XSS)",
		"about": "A type of injection, in which malicious scripts are injected into otherwise benign and trusted web sites, occurring when an attacker send malicious code, generally in the form of a browser side script, to a different end user. n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "QXxnBK9SNwEB8IawdCGH1RdrLqUvdM116u58qL2jsckFsIrceExqZbqaqD5tJgVaBClF90P123rW0Gsr99116A1vy116KA117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Custom Special Character Injection",
		"about": "Not properly filtering or quoting special characters or reserved words that are used in a custom or proprietary language or representation, allowing attackers to modify the syntax, content, or commands before they are processed.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "zHbCsxbx116a40VlqlqNpl6116W86Q116h7UZq1Vaj4LJ6B1L123JW7wfEFSS8AfBP8ehdnxRUnyudAxnIo1168K0116VnMbrw117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Direct Dynamic Code Evaluation",
		"about": "This attack consists of a script that does not properly validate user inputs in the page parameter, allowing a specially crafted URL to pass arbitrary code to an eval() statement, which results in code execution. n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "9AIO116OtY7116lrk116ay123Xshrq2B3116Kb123U5lDdlDP6GJyjbJ6RgtRtSYyQk4X6Y0VinPFPLyzzSXz5YPnSof6gemvQ117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Format String Attack",
		"about": "Occurring when the submitted data of an input string is evaluated as a command, allowing the execution of code, to read the stack, or cause a segmentation fault, causing behaviors that could compromise the system.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "qIqwg0r7hrqzljtV6Nu60q5erwyOrCvF1232HkiuZkw43M2eDijGAWhV9L67nhJw24SumL0Bn2116QUpwjO5XcRVjA117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Full Path Disclosure",
		"about": "Vulnerabilities enabling the attacker to see the path to the webroot/file, potentially opening up full access to the underlying system.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "116KEeRcUfugX1t3UYqe1MTQRoBoM9JHrEybBuaR3b3Gz116E0RtQL8vu1zV6W116UgIaH44lvz1NwaSwx8Ku1160Gf7ig117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "LDAP Injection",
		"about": "An attack used to exploit web based applications that construct LDAP statements based on user input, resulting in the execution of arbitrary commands inside the LDAP tree.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "yzK4tZS0O4HPq4txcvV1wUue4KrdG7tl2mjitkPlALbw8123kWHWWAdP7fku7SBfUSYNULqV5kkqT5cFYs4i5rvQ117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Parameter Delimiter",
		"about": "An attack based on the manipulation of parameter delimiters used by web application input vectors in order to cause unexpected behaviors like access control and authorization bypass and information disclosure.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "Vssn9nszUHYCmAKl33NCTqbhQlXo5wOPJaFMG9123zBLfEaQ13GUe4YfhXnnRywWZnLri0OXrGNX73YoMqbvikeQ117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "PHP Object Injection",
		"about": "An application level vulnerability that could allow an attacker to perform different kinds of malicious attacks, such as Code Injection, SQL Injection, Path Traversal and Application Denial of Service, depending on the context.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "thfLp0T6R2HeEvULBYAYQzMmKtN7h9skXXmMFHXxxsuYB3JKKL0n116gRVy5xcGf1AWYYTo8ns6SmD6bSa76s99g117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Regular Expression Denial of Service (ReDoS)",
		"about": "Exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly, enter these extreme situations and then hang for a very long time.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "JygF11G0116zLW116QUlQgcvPgiWSV116jtAMCmvIfMNy2VH6CO116gBPvzDO56aereQhmWdN45RKBKeXo123gRJ1HEAM9Ow117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Resource Injection",
		"about": "This attack consists of changing resource identifiers used by an application in order to perform a malicious task, allowing data to be manipulated to execute or access different resources.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "3e2NfGJ9YRRQckgJZwn8rXCE3OEde116RhBc2eBLl116gxwovmYM4123ujURik20Qn123vb25TsaxwxsoT2P2Ow4lT116HoQ117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Server-Side Includes (SSI) Injection",
		"about": "An attack that allows the exploitation of a web application by injecting scripts in HTML pages or executing arbitrary codes remotely, exploiting through the manipulation of SSI in use and force its use through user input fields.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "EOhUGSaTOPC1163x2WtxffWroQnN5DXa1K5rTHpRpfsZBT6qu0NBQg084cWrzgnfdhi3G6C1164CYKLXtzbbSADw9w117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Special Element Injection",
		"about": "Special Element Injection is a type of injection attack that exploits a weakness related to reserved words and special characters, leading to information disclosure, access control and authorization bypass, and code injection.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "DEssZjYSfYsK9cpsd9wEjlHtxy959tem9Rd6E3JzDEgfUuXxBLcH06GMKgb0hWO22Of6wwLLEy1235r4A51jQiFQ117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "SQL Injection",
		"about": "The insertion of a SQL query via the input data allowing the reading sensitive data from the database, modify database data, execute administrative tasks, and in some cases issue commands to the operating system. n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "Wm4yQjQQZm5aBg7qGWGghORPNeRJzjQdGVVcqtUbXdPgnOT9debP2rql4naf6mPFaaf21oInE8ByEwDbrFA123Fw117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "Web Parameter Tampering",
		"about": "An attacked based on the manipulation of parameters exchanged between client and server in order to modify application data, such as user credentials and permissions, price and quantity of products, etc. n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "FlrvSlvnhdiEJzvuiECUzoOL123oyE7vp0x5E116UAy2CehZJ64HRz2giacdaDPSa3116sjaMReBO47GR0GghqDnKwJQ117117",
		"building_block_category_id": "hteWqsXv5wyqmrsNSbNPZXLsfo5jxbasBKEjGkiaj116Vk4xR4RFLiqTN2U29GY2k3CmHGILPQguDo124bfyeZ7A117117",
		"name": "XPATH Injection",
		"about": "An attack occurring when a web site uses user-supplied information to construct an XPath query for XML data, sending malformed information to an API opening up how the XML data is structured, or access data.n",
		"category_id": "207",
		"category": "Embedded Malicious Code",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "44ELlRb5D1wj1Wwkz3i3pcZerSdRUwI2u8lzsYkDiO98q2Hsp4aJqXtTYWCfdDouNRZQsU0x2KbxSCklZbtZGA117117",
		"building_block_category_id": "S1DW7116ml6QUX3116FFK4LjSR8uxd19U9Qx3Yr0iEK69nCoxtVbLMqWvnGsFwJ9B123UlglRtthC5BvkFRP1SxO4HYw117117",
		"name": "Brute Force Attack",
		"about": "A brute force attack can manifest itself in many different ways, but primarily consists in an attacker configuring predetermined values, making requests to a server using those values, and then analyzing the response.n",
		"category_id": "208",
		"category": "Injection",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "aus0P2y116HhXT0aLOyx7epIFithqLtoeNG1jBd39LEeeqtcDYpQ2dbhIZew0Z1161oKRliycduqAEk1164FFPpgiHig117117",
		"building_block_category_id": "S1DW7116ml6QUX3116FFK4LjSR8uxd19U9Qx3Yr0iEK69nCoxtVbLMqWvnGsFwJ9B123UlglRtthC5BvkFRP1SxO4HYw117117",
		"name": "Cash Overflow",
		"about": "An attack specifically aimed at exceeding hosting costs, either essentially bankrupting the service owner or exceeding the cost limits, leading the cloud service provider to disable the application.n",
		"category_id": "208",
		"category": "Injection",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "FkZr2RJ0tPgdUGr0xoFn2LwQytJTUgAysCJ5iIBVo3CKvGeFmsA8MZwpHU5l6gRRaRylpxIfDMJJxBXmV2dAjg117117",
		"building_block_category_id": "S1DW7116ml6QUX3116FFK4LjSR8uxd19U9Qx3Yr0iEK69nCoxtVbLMqWvnGsFwJ9B123UlglRtthC5BvkFRP1SxO4HYw117117",
		"name": "Cryptanalysis ",
		"about": "Cryptanalysis is a process of finding weaknesses in cryptographic algorithms and using these weaknesses to decipher the ciphertext without knowing the secret key (instance deduction). ",
		"category_id": "208",
		"category": "Injection",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "IMSHafHECrsCm5rnXQSaaOqnOYbug116L53PMHXyWNirUiWxzpuTXX4gDMQfY1XzbKd116wnPKPaiFJibh6jakYGbA117117",
		"building_block_category_id": "S1DW7116ml6QUX3116FFK4LjSR8uxd19U9Qx3Yr0iEK69nCoxtVbLMqWvnGsFwJ9B123UlglRtthC5BvkFRP1SxO4HYw117117",
		"name": "Denial of Service",
		"about": " The Denial of Service (DoS) attack is focused on making a resource (site, application, server) unavailable for the purpose it was designed. ",
		"category_id": "208",
		"category": "Injection",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "6tm0BMaeYeGy70DqGCHkVadL9LK1GBkapX0MsujC9SE87fW5oCA2WG7IS1160F2116CiAIOHa1baGgbI53EtDJHPlg117117",
		"building_block_category_id": "0JGzGhrLZn1ICG8E8g9ivtBda123Z9r5LB1123LHmPkHFKrH7123F6pKSEUUnM3z116CB6TTs8f2Q81ynb7VmmE116rVGZvQ117117",
		"name": "HTTP Request Smuggling",
		"about": "The HTTP Request Smuggling attack explores an incomplete parsing of the submitted data done by an intermediary HTTP system working as a proxy.n",
		"category_id": "209",
		"category": "Path Traversal Attack",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "i8lf1VqVbJWvHCmuZMRrCimgfqVA9FuTGeCvlLiTrzXB8nd9QKrpmyU6d0SToaWvf8vzDH7MkQl0MmusNVBBUQ117117",
		"building_block_category_id": "0JGzGhrLZn1ICG8E8g9ivtBda123Z9r5LB1123LHmPkHFKrH7123F6pKSEUUnM3z116CB6TTs8f2Q81ynb7VmmE116rVGZvQ117117",
		"name": "HTTP Response Splitting",
		"about": "Occurs when data enters a through an untrusted source, most frequently an HTTP request, included in an HTTP response header sent to a web user without being validated for malicious characters.n",
		"category_id": "209",
		"category": "Path Traversal Attack",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "CYeYTiaZccZ5bdzDMXGdBu8X0FPko6iyZenb123UuLYEqvKobM8VSY93SLCRCykmOSnxsffvkkTsCn7JkIYC8123jQ117117",
		"building_block_category_id": "0JGzGhrLZn1ICG8E8g9ivtBda123Z9r5LB1123LHmPkHFKrH7123F6pKSEUUnM3z116CB6TTs8f2Q81ynb7VmmE116rVGZvQ117117",
		"name": "Traffic Flood",
		"about": "A type of DoS attack that explores the way that the TCP connection is managed, with the generation of a lot of well-crafted TCP requisitions, with the objective to stop the Web Server or cause a performance decrease. n",
		"category_id": "209",
		"category": "Path Traversal Attack",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "3Vh6TfxI79wFMuv116JqMF3wJn2kkta4116Jn8dDqpp2bFch0YA9kI6116pm1t116euBAhFUho4TAg2s3h7NHO7wLBDdQw117117",
		"building_block_category_id": "Bbln1qqlPucFHcA6AtHfgRaCXi96yiDqZy123qTK0nkxin2HgEgc1vnlfhxJmrHhnY4YjIytSkqE116qhoTl7D7ajQ117117",
		"name": "Asymmetric Resource Consumption",
		"about": "Asymmetric resource consumption consists in an attacker forcing a web application to consume excessive resources when the application fails to release, or incorrectly releases, a system resource. n",
		"category_id": "210",
		"category": "Probabilistic Technique",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "dDjvHa0123McSOUpf5jm3X2KJkDvEnAvG7123043Jz9im98QbvYCIuhuA7iwMh60MBLM4sVWgLEWPsHSBrntqNtt116g117117",
		"building_block_category_id": "Bbln1qqlPucFHcA6AtHfgRaCXi96yiDqZy123qTK0nkxin2HgEgc1vnlfhxJmrHhnY4YjIytSkqE116qhoTl7D7ajQ117117",
		"name": "Cash Overflow",
		"about": "An attack specifically aimed at exceeding hosting costs, either essentially bankrupting the service owner or exceeding the cost limits, leading the cloud service provider to disable the application.n",
		"category_id": "210",
		"category": "Probabilistic Technique",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "pCF5YGGRqYBS50M1235X78op123tOCF6OwtiEx9hKa4pBF12331233l3NFqSISc09KsVuKyim0Tb8J57BXczQhue7PPa9A117117",
		"building_block_category_id": "Bbln1qqlPucFHcA6AtHfgRaCXi96yiDqZy123qTK0nkxin2HgEgc1vnlfhxJmrHhnY4YjIytSkqE116qhoTl7D7ajQ117117",
		"name": "Denial of Service",
		"about": " The Denial of Service (DoS) attack is focused on making a resource (site, application, server) unavailable for the purpose it was designed. ",
		"category_id": "210",
		"category": "Probabilistic Technique",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "4EaFe9BQaowmvbp1230j123v6uea116zCq6uB6b116Tr89B1KMKZuc7HzHccSs8kvpseUz1ZSVJlsexf1vynM1wUfuOMBQ117117",
		"building_block_category_id": "MQk68ecz2U2JkbO9xOx8azXriF3nfydGvyOJM72YKTjkbasE132PcPrL10p1TxWsO9a4Ut4123R5MJdqVqNGJg3Q117117",
		"name": "Comment Injection Attack",
		"about": "Comments injected into an application through input can be used to compromise a system, where data is parsed, an injected/malformed comment may cause the process to take unexpected actions that result in an attack.n",
		"category_id": "211",
		"category": "Protocol Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "boopriz2XL7qnOyctof9nSB5HK6jVxW116mY123xZUXWAwxa2Q3hof7TVbFnzrjy116KIHrZdB2c5kf116xrGbU19hUFMA117117",
		"building_block_category_id": "MQk68ecz2U2JkbO9xOx8azXriF3nfydGvyOJM72YKTjkbasE132PcPrL10p1TxWsO9a4Ut4123R5MJdqVqNGJg3Q117117",
		"name": "Custom Special Character Injection",
		"about": "Not properly filtering or quoting special characters or reserved words that are used in a custom or proprietary language or representation, allowing attackers to modify the syntax, content, or commands before they are processed.n",
		"category_id": "211",
		"category": "Protocol Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "YLK123c8YeEoryKYORTLYAyEGWEzzYCrKqpxnB08gbMru116G43xSEU0AoBuEHsFhPdi7O8bTtP1235PcWZjeZzqeeKg117117",
		"building_block_category_id": "MQk68ecz2U2JkbO9xOx8azXriF3nfydGvyOJM72YKTjkbasE132PcPrL10p1TxWsO9a4Ut4123R5MJdqVqNGJg3Q117117",
		"name": "Double Encoding",
		"about": "Encoding user request parameters twice in hexadecimal format in order to bypass security controls or cause unexpected behavior from the application. n",
		"category_id": "211",
		"category": "Protocol Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "BqmTuA116taVHNptxiraLaV1MOdbl07SDwm7FU20RPSptJ4oVY0ZOZnjgsRome2xAqjGl2LK64I7zkZr5FhSYeCQ117117",
		"building_block_category_id": "MQk68ecz2U2JkbO9xOx8azXriF3nfydGvyOJM72YKTjkbasE132PcPrL10p1TxWsO9a4Ut4123R5MJdqVqNGJg3Q117117",
		"name": "Forced Browsing",
		"about": "An attack that enumerates and opens up access to resources that are not referenced by the API, allowing the discovery unlinked contents in the domain directory, such as temp directories and files, and configuration files.",
		"category_id": "211",
		"category": "Protocol Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "i5DrBj116ijkm1z5zxnYqWSP3muyZiznibI5Won20116rm2Lj116x3aGOCeyT6m91233iORiMkE3E4jCJ3ZpyvCsZS123PZw117117",
		"building_block_category_id": "MQk68ecz2U2JkbO9xOx8azXriF3nfydGvyOJM72YKTjkbasE132PcPrL10p1TxWsO9a4Ut4123R5MJdqVqNGJg3Q117117",
		"name": "Path Traversal",
		"about": "A Path Traversal attack aims to access files and directories that are stored outside the web root folder, by browsing the application, the attacker looks for absolute links to files stored on the web server.n",
		"category_id": "211",
		"category": "Protocol Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "VYLzy7123EOcD116CjBcC18iktZLeKMVR123jctroLEzNHGeuBZ76DMaO123iFJ0f71cdurXwAE6O6UO8yBhRSdS3j6JYw117117",
		"building_block_category_id": "MQk68ecz2U2JkbO9xOx8azXriF3nfydGvyOJM72YKTjkbasE132PcPrL10p1TxWsO9a4Ut4123R5MJdqVqNGJg3Q117117",
		"name": "Relative Path Traversal",
		"about": "This attack is a variant of Path Traversal and can be exploited when the application accepts the use of relative traversal sequences such as "../".n",
		"category_id": "211",
		"category": "Protocol Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "A0k116Y116bLafG116bn86gF2zenSnlxk7kEYZ1IddmgHbweQj2116K123w5zihcs58F6116j1CP3Hy4w6Rl123f80i7123YATYnog117117",
		"building_block_category_id": "MQk68ecz2U2JkbO9xOx8azXriF3nfydGvyOJM72YKTjkbasE132PcPrL10p1TxWsO9a4Ut4123R5MJdqVqNGJg3Q117117",
		"name": "Repudiation Attack",
		"about": "A repudiation attack happens when an application or system does not adopt controls to properly track and log users' actions, thus permitting malicious manipulation or forging the identification of new actions. n",
		"category_id": "211",
		"category": "Protocol Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "LFDRmrQ3caVU54qQokbD3l0UU2VS116ksGJke9MHk3QAU57amcI2eFvt2OAh7Z4c8OzsrrpuqCSWv2opr5GuUpCw117117",
		"building_block_category_id": "MQk68ecz2U2JkbO9xOx8azXriF3nfydGvyOJM72YKTjkbasE132PcPrL10p1TxWsO9a4Ut4123R5MJdqVqNGJg3Q117117",
		"name": "Setting Manipulation",
		"about": "The modification of settings in order to cause misleading data or advantages on the attacker's behalf, manipulating values in the system and manage specific user resources of the application or affect its functionalities. n",
		"category_id": "211",
		"category": "Protocol Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "Kwyg3TpqwRWKDAbnPvpD123xOuMDve7erjzfOz0rhsv3x3g7IBmal79yE72QvaAzR4nH9ekFbqm9fV7HgCVLSvVA117117",
		"building_block_category_id": "MQk68ecz2U2JkbO9xOx8azXriF3nfydGvyOJM72YKTjkbasE132PcPrL10p1TxWsO9a4Ut4123R5MJdqVqNGJg3Q117117",
		"name": "Unicode Encoding",
		"about": "Opening up of flaws in the decoding mechanism implemented by decoding Unicode data format, allowing for encoding of certain characters in the URL to bypass filters, thus accessing restricted resources.n",
		"category_id": "211",
		"category": "Protocol Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "1ABpCUXFpvLpBWsLLRqJgAcD1237joOURgstWOmm6zZz777HFA0ovsKtDqkldkEKeHCNTckhTBfp1236116GJG99Ae6g117117",
		"building_block_category_id": "oxHUusiJC4XOaMTFn5gzHu01fYgrorRTIz8UCbK123IsyvfnTGRpt8oDfBUIJh7FTzcii5rp0ki8Q4x4TjlrTi7g117117",
		"name": "Cash Overflow",
		"about": "An attack specifically aimed at exceeding hosting costs, either essentially bankrupting the service owner or exceeding the cost limits, leading the cloud service provider to disable the application.n",
		"category_id": "212",
		"category": "Resource Depletion",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "p0j2gfcY8gkLZPBYfGqwZWEJ97xAasb3123bi123YW9MBbnqmWGN4z91116E116tmjRGeC5Mmrj5M12392tiO4DSlK7IxxSw117117",
		"building_block_category_id": "oxHUusiJC4XOaMTFn5gzHu01fYgrorRTIz8UCbK123IsyvfnTGRpt8oDfBUIJh7FTzcii5rp0ki8Q4x4TjlrTi7g117117",
		"name": "Cross-Site Request Forgery (CSRF)",
		"about": "An attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated, targeting state-changing requests, not theft of data, since the attacker has no way to see the response to the forged request. ",
		"category_id": "212",
		"category": "Resource Depletion",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "W20YSWUaCwIF0116HJGmGluiSVjAUloHRa57v123Cx69aXFerkiPLs97Q123TdAe3JS30jWNac8bG3qTTj1zj6QLtM3w117117",
		"building_block_category_id": "oxHUusiJC4XOaMTFn5gzHu01fYgrorRTIz8UCbK123IsyvfnTGRpt8oDfBUIJh7FTzcii5rp0ki8Q4x4TjlrTi7g117117",
		"name": "Man-in-the-Middle Attack",
		"about": "The interception of communication between two systems, where once the TCP connection is intercepted, the attacker acts as a proxy, being able to read, insert and modify the data in the intercepted communication.n",
		"category_id": "212",
		"category": "Resource Depletion",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "fncWwNafu2PU0hmdvCJ21167xXBul4ggR1EcWaEifzJrcb0jUupvtHY2y123d44Fbv9BOgNpkLGS116VoPqcMhPiyxqA117117",
		"building_block_category_id": "9brywhNvaO7JeYIL123CfY38p8lLx123gDPwhPV6cp6CcDwFiGT3123G40AON2coEQUNs2H8soGL7HtUwcUwW4os8apQ117117",
		"name": "Certification ",
		"about": "Providing a system for validating and certifying an APIs security, scanning the surface area and providing guarantees that the endpoint(s) are secure.rn",
		"category_id": "213",
		"category": "Resource Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "gkvmMNxErNpGbAJt116CJxRd85lvFw3LCs7HX116yzBDApc1238JMu116jls1tAivDRgWxZWgdtStAxaRz1M5S0uTa520w117117",
		"building_block_category_id": "9brywhNvaO7JeYIL123CfY38p8lLx123gDPwhPV6cp6CcDwFiGT3123G40AON2coEQUNs2H8soGL7HtUwcUwW4os8apQ117117",
		"name": "Security Visualization",
		"about": "Allowing API owners with reports and charting, allowing them to visualize the surface area and security of an API. Providing a single way to see all the potential attacks, vulnerabilities, and what is being done about security overall.rn",
		"category_id": "213",
		"category": "Resource Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "K9ew0w7vCzbiHHB4GpY1FY2Zf6gf4pbFCRDm0TNK2Mr9mHPTGVp7zPtzMooZCbEqr3X8xkqh21zlJMsrKBg2Yg117117",
		"building_block_category_id": "9brywhNvaO7JeYIL123CfY38p8lLx123gDPwhPV6cp6CcDwFiGT3123G40AON2coEQUNs2H8soGL7HtUwcUwW4os8apQ117117",
		"name": "Compliance & Auditing Reporting",
		"about": "Providing a specific interface for auditors and compliance officers to see what security has been applied to any interface. The reporting should provide details that are in alignment with whatever standard is being applied to the industry, as well as standard security approaches.rn",
		"category_id": "213",
		"category": "Resource Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "MVuAfh116CkCcqe4LJI3xr6cNGFRT1233Ay4vhC42kf0YnqHjmhF54rLzcOpeF6p123b9htqWSmF1rs25DMjRKevKpbw117117",
		"building_block_category_id": "9brywhNvaO7JeYIL123CfY38p8lLx123gDPwhPV6cp6CcDwFiGT3123G40AON2coEQUNs2H8soGL7HtUwcUwW4os8apQ117117",
		"name": "Bug Bounty Program",
		"about": "Provide a platform for running a bug bounty program, that allows API providers to crowdsource the discovery, and review of an API, providing a potentially friendly way to handle security before bad actors can step in and find vulnerabilities.rn",
		"category_id": "213",
		"category": "Resource Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "gYoCvRkUaaJxEoWOzvXx4WHZlhrnLoZ123Ab123CzGqjA81168fkpyMVs116b2g2K2SnyleJB116lTwXcBGBRH4LUhv8RR7w117117",
		"building_block_category_id": "9brywhNvaO7JeYIL123CfY38p8lLx123gDPwhPV6cp6CcDwFiGT3123G40AON2coEQUNs2H8soGL7HtUwcUwW4os8apQ117117",
		"name": "Endpoint Tagging",
		"about": "Allow for the tagging and organizing of APIs into specific groups for scanning, monitoring, and reviewing of APIs. Giving providers an easy way to organize so that they can be secured, and understood.rn",
		"category_id": "213",
		"category": "Resource Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "omG3Q9X5XEsCCIwVqz116RvHw5k1168saul123Jm5123iBiKv3kCpb116ESQvgq9m123FdKGMtJ123lpab81q4kWsE14kqM1kxew117117",
		"building_block_category_id": "9brywhNvaO7JeYIL123CfY38p8lLx123gDPwhPV6cp6CcDwFiGT3123G40AON2coEQUNs2H8soGL7HtUwcUwW4os8apQ117117",
		"name": "Intrusion Correlation",
		"about": "Providing the ability to connect the dots between various security attacks and intrusions, providing insight into patterns used by attackers, locations of attacks, and other details that might help security.rn",
		"category_id": "213",
		"category": "Resource Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "Yg4GMU5O6v7Ml9mXkFtZnGs1OABXLW9KZNxiv63ONSQ9q1fezSqaxgTC0y1231Rct2hicOYsS116OtZGbxtF6123Fz4w117117",
		"building_block_category_id": "9brywhNvaO7JeYIL123CfY38p8lLx123gDPwhPV6cp6CcDwFiGT3123G40AON2coEQUNs2H8soGL7HtUwcUwW4os8apQ117117",
		"name": "Risk Scoring",
		"about": "Offer a single scoring approach to be able to score attacks, based upon existing understanding of the space, but also historical data, providing a clear way to rank, and understand how vulnerabilities, and attacks could affect operations.rn",
		"category_id": "213",
		"category": "Resource Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	},
	{
		"building_block_id": "x1239F123BZZ9L31VX2lWpzLBtYadBbwVDxKBejwaob0TxMatxnKy7GHfRQqQL3Sr9RtsqByEYUXdNOgga1YRogMdg117117",
		"building_block_category_id": "9brywhNvaO7JeYIL123CfY38p8lLx123gDPwhPV6cp6CcDwFiGT3123G40AON2coEQUNs2H8soGL7HtUwcUwW4os8apQ117117",
		"name": "Publish Your Page",
		"about": "Publishing a single page that covers what the security approaches are for a platform, providing as much detail as possible about what practices are employed, what the schedule looks like, and what results of security history is.",
		"category_id": "213",
		"category": "Resource Manipulation",
		"image": "",
		"image_width": "100",
		"sort_order": "0"
	}
]